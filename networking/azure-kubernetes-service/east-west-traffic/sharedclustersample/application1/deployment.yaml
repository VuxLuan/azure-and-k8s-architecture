# The below deployments allow you to test the network policies by executing into the busybox container
# and running CURL commands to the httpbin service of any namespace belonging to the app. You can
# as well validate that you can't reach the httpbin service of the other app.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: busybox
  namespace: application1-ns1
spec:  
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:          
      containers:
      - name: busybox
        image: governmentpaas/curl-ssl
        command: ["/bin/sleep", "30d"]
        imagePullPolicy: IfNotPresent
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: busybox
  namespace: application1-ns2
spec:  
  replicas: 1
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:          
      containers:
      - name: busybox
        image: governmentpaas/curl-ssl
        command: ["/bin/sleep", "30d"]
        imagePullPolicy: IfNotPresent
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: httpbin
  namespace: application1-ns1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: httpbin
  template:
    metadata:
      labels:
        app: httpbin
    spec:
      containers:
      - image: docker.io/kennethreitz/httpbin
        imagePullPolicy: IfNotPresent
        name: httpbin
        ports:
        - containerPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: httpbin
  namespace: application1-ns2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: httpbin
  template:
    metadata:
      labels:
        app: httpbin
    spec:
      containers:
      - image: docker.io/kennethreitz/httpbin
        imagePullPolicy: IfNotPresent
        name: httpbin
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: httpbin
  namespace: application1-ns1
spec:
  ports:
  - name: http
    port: 8000
    targetPort: 80
  selector:
    app: httpbin
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: httpbin
  namespace: application1-ns2
spec:
  ports:
  - name: http
    port: 8000
    targetPort: 80
  selector:
    app: httpbin
  type: ClusterIP
---